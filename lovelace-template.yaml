button_card_templates:
  meter_template:
    type: custom:button-card
    show_name: false
    show_state: false
    styles:
      card:
        - padding: 6pt 6pt 6pt 6pt
        - border-radius: 10px
        - display: flex
        - flex-direction: column
        - justify-content: space-between
        - align-items: center
        - height: var(--card-height, 90px)
        - width: var(--card-width, 240px)
      grid:
        - grid-template-areas: '"text1 text1" "meter meter" "text2 text2"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: min-content min-content min-content
      custom_fields:
        text1:
          - font-size: 14px
          - color: null
          - text-align: left
          - width: 100%
        meter:
          - order: 1
          - display: flex
          - flex-direction: row
          - gap: 2px
          - font-size: var(--meter-font-size, 24px)
          - font-weight: bold
          - padding: var(--meter-padding, 6px 8px)
          - border-radius: 6px
          - box-shadow: inset 0 2px 4px
        text2:
          - font-size: 14px
          - color: null
          - text-align: right
          - width: 100%
    custom_fields:
      text1: |
        [[[
          return variables.text1 || '';
        ]]]
      text2: |
        [[[
          return variables.text2 || '';
        ]]]
      meter: |
        [[[
          const intDigits = Math.max(3, Math.min(6, parseInt(variables.int_digits || 6)));
          const decDigits = Math.max(1, Math.min(3, parseInt(variables.dec_digits || 3)));
          const totalLength = intDigits + 1 + decDigits;

          let raw = parseFloat(entity.state);
          if (isNaN(raw)) {
            return Array(totalLength).fill('?').map(c => 
              `<div class="meter-digit">?</div>`).join('');
          }

          let val = raw.toFixed(decDigits);
          val = val.padStart(totalLength, '0');

          return val.split('').map(d => {
            if (d === '.') {
              return `<div class="meter-dot">.</div>`;
            } else {
              return `<div class="meter-digit">${d}</div>`;
            }
          }).join('');
        ]]]
    extra_styles: |
      .meter-digit, .meter-dot {
        background: #000;
        color: #e6e6e6;
        width: var(--meter-width, 20px);
        height: var(--meter-height, 30px);
        text-align: center;
        line-height: var(--meter-height, 30px);
        margin: 0 1px;
        border: 1px solid #555;
        border-radius: 4px;
        box-shadow:
          inset 0 -2px 4px rgba(255,255,255,0.1),
          inset 0 2px 4px rgba(0,0,0,0.4),
          0 1px 1px rgba(0,0,0,0.2);
      }
      .meter-dot {
        width: 10x;
        padding-top: 2px;
        color: #ff4444;
        background: #fff;
        border: none;
        box-shadow: none;
      }
